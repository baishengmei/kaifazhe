Mon, 02 Jul 2018 09:02:40 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `User` (`id` UUID PRIMARY KEY, `email` VARCHAR(255), `emailConfirmed` TINYINT(1) DEFAULT 0, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`User`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_User_1`)
Executing (default): PRAGMA INDEX_INFO(`user_email`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserLogin` (`name` VARCHAR(50) NOT NULL, `key` VARCHAR(100) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`name`, `key`));
Executing (default): PRAGMA INDEX_LIST(`UserLogin`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserLogin_1`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserClaim` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `type` VARCHAR(255), `value` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);
Executing (default): PRAGMA INDEX_LIST(`UserClaim`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserProfile` (`userId` UUID PRIMARY KEY REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `displayName` VARCHAR(100), `picture` VARCHAR(255), `gender` VARCHAR(50), `location` VARCHAR(100), `website` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`UserProfile`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserProfile_1`)
The server is running at http://localhost:5000/, now is 2018-7-2 17:02:40, pid = 4226
Mon, 02 Jul 2018 09:03:51 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `User` (`id` UUID PRIMARY KEY, `email` VARCHAR(255), `emailConfirmed` TINYINT(1) DEFAULT 0, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`User`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_User_1`)
Executing (default): PRAGMA INDEX_INFO(`user_email`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserLogin` (`name` VARCHAR(50) NOT NULL, `key` VARCHAR(100) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`name`, `key`));
Executing (default): PRAGMA INDEX_LIST(`UserLogin`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserLogin_1`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserClaim` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `type` VARCHAR(255), `value` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);
Executing (default): PRAGMA INDEX_LIST(`UserClaim`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserProfile` (`userId` UUID PRIMARY KEY REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `displayName` VARCHAR(100), `picture` VARCHAR(255), `gender` VARCHAR(50), `location` VARCHAR(100), `website` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`UserProfile`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserProfile_1`)
The server is running at http://localhost:5000/, now is 2018-7-2 17:03:51, pid = 4368
Mon, 02 Jul 2018 09:04:59 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `User` (`id` UUID PRIMARY KEY, `email` VARCHAR(255), `emailConfirmed` TINYINT(1) DEFAULT 0, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`User`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_User_1`)
Executing (default): PRAGMA INDEX_INFO(`user_email`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserLogin` (`name` VARCHAR(50) NOT NULL, `key` VARCHAR(100) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`name`, `key`));
Executing (default): PRAGMA INDEX_LIST(`UserLogin`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserLogin_1`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserClaim` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `type` VARCHAR(255), `value` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);
Executing (default): PRAGMA INDEX_LIST(`UserClaim`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserProfile` (`userId` UUID PRIMARY KEY REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `displayName` VARCHAR(100), `picture` VARCHAR(255), `gender` VARCHAR(50), `location` VARCHAR(100), `website` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`UserProfile`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserProfile_1`)
The server is running at http://localhost:5000/, now is 2018-7-2 17:04:59, pid = 4500
Mon, 02 Jul 2018 09:05:33 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `User` (`id` UUID PRIMARY KEY, `email` VARCHAR(255), `emailConfirmed` TINYINT(1) DEFAULT 0, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`User`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_User_1`)
Executing (default): PRAGMA INDEX_INFO(`user_email`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserLogin` (`name` VARCHAR(50) NOT NULL, `key` VARCHAR(100) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`name`, `key`));
Executing (default): PRAGMA INDEX_LIST(`UserLogin`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserLogin_1`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserClaim` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `type` VARCHAR(255), `value` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);
Executing (default): PRAGMA INDEX_LIST(`UserClaim`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserProfile` (`userId` UUID PRIMARY KEY REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `displayName` VARCHAR(100), `picture` VARCHAR(255), `gender` VARCHAR(50), `location` VARCHAR(100), `website` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`UserProfile`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserProfile_1`)
The server is running at http://localhost:5000/, now is 2018-7-2 17:05:33, pid = 4599
Mon, 02 Jul 2018 09:07:50 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `User` (`id` UUID PRIMARY KEY, `email` VARCHAR(255), `emailConfirmed` TINYINT(1) DEFAULT 0, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`User`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_User_1`)
Executing (default): PRAGMA INDEX_INFO(`user_email`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserLogin` (`name` VARCHAR(50) NOT NULL, `key` VARCHAR(100) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`name`, `key`));
Executing (default): PRAGMA INDEX_LIST(`UserLogin`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserLogin_1`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserClaim` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `type` VARCHAR(255), `value` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);
Executing (default): PRAGMA INDEX_LIST(`UserClaim`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserProfile` (`userId` UUID PRIMARY KEY REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `displayName` VARCHAR(100), `picture` VARCHAR(255), `gender` VARCHAR(50), `location` VARCHAR(100), `website` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`UserProfile`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserProfile_1`)
The server is running at http://localhost:5000/, now is 2018-7-2 17:07:50, pid = 4841
Mon, 02 Jul 2018 09:09:31 GMT sequelize deprecated String based operators are now deprecated. Please use Symbol based operators for better security, read more at http://docs.sequelizejs.com/manual/tutorial/querying.html#operators at node_modules/sequelize/lib/sequelize.js:242:13
Executing (default): CREATE TABLE IF NOT EXISTS `User` (`id` UUID PRIMARY KEY, `email` VARCHAR(255), `emailConfirmed` TINYINT(1) DEFAULT 0, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`User`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_User_1`)
Executing (default): PRAGMA INDEX_INFO(`user_email`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserLogin` (`name` VARCHAR(50) NOT NULL, `key` VARCHAR(100) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY (`name`, `key`));
Executing (default): PRAGMA INDEX_LIST(`UserLogin`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserLogin_1`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserClaim` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `type` VARCHAR(255), `value` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` UUID REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE);
Executing (default): PRAGMA INDEX_LIST(`UserClaim`)
Executing (default): CREATE TABLE IF NOT EXISTS `UserProfile` (`userId` UUID PRIMARY KEY REFERENCES `User` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `displayName` VARCHAR(100), `picture` VARCHAR(255), `gender` VARCHAR(50), `location` VARCHAR(100), `website` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
Executing (default): PRAGMA INDEX_LIST(`UserProfile`)
Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_UserProfile_1`)
The server is running at http://localhost:5000/, now is 2018-7-2 17:09:31, pid = 4986
